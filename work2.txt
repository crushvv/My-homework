        1.瀑布模型是线性的,封闭不透明的开发模式,在开发过程中客户只能通过文档来了解产品,最大的弊端是下游工作的开展严重依赖于上游的交付完成情况,造成了严重的人力资源浪费。
    敏捷开发以用户需求为核心,采用迭代、循序渐进的方法进行软件开发,在软件项目构建初期会切分成很多独立小项目来进行开发,所有的人都要同时的工作,最大的特色是客户会参与到软件开发的过程中,能够及时响应客户的需求,当然这样也伴随着混乱的产生。
        2.  A.规划策略(Planning Game)。既然简单的设计有助于快速的进展那么不断的规划也一定会帮助到项目的方方面面。很难说架构师做好的架构就一定不会在后期改变，既然需求都很有可能有大改变，那么架构与整体项目规划也不是一成不变的。这是XP的核心，XP告诉你如何迎接变化，如何在快速变化的今天作出最优质的产品，真正满足客户的需求。     
            B.持续集成(Continuous Integration)。这是另一种保证质量的测试手段，通过反复快速的集成我们可以及早发现软件中的隐患，同时持续集成也可以提供给我们多个小版本(Small Releases)以便客户的反馈。这个概念比较像微软提出的每日编译，只是XP并没有规定必须每日执行一次，XP反而主张每几个小时甚至每几分钟集成一次，总之就是当有较大变动时就及时集成给出反馈，这一点也能够充分的体现出XP极限编程中的极限